CREATE TABLE EMPLOYEE(EMP_ID INT PRIMARY KEY,FIRST_NAME varchar(10),last_name varchar(10),birth_date date,sex varchar(1),salary int,super_id int,branch_id int );
CREATE TABLE BRANCH(BRANCH_ID INT AUTO_INCREMENT PRIMARY KEY,BRANCH_NAME VARCHAR(10),MGR_ID INT,MGR_START_DATE date,FOREIGN KEY(MGR_ID) references EMPLOYEE(EMP_ID) ON DELETE SET NULL);
ALTER TABLE EMPLOYEE ADD FOREIGN KEY(SUPER_ID) references EMPLOYEE(EMP_ID) ON DELETE SET NULL;
ALTER TABLE EMPLOYEE ADD FOREIGN KEY(BRANCH_ID) references BRANCH(BRANCH_ID) ON DELETE SET NULL;
CREATE TABLE CLIENT(CLIENT_ID INT PRIMARY KEY,CLIENT_NAME VARCHAR(20),BRANCH_ID INT,FOREIGN KEY(BRANCH_ID) references BRANCH(BRANCH_ID) ON DELETE SET NULL);
CREATE TABLE WORKS_WITH(EMP_ID INT,CLIENT_ID INT,TOTAL_SALES INT,PRIMARY KEY(EMP_ID,CLIENT_ID),FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID) ON DELETE CASCADE,FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT(CLIENT_ID) ON DELETE CASCADE);
CREATE TABLE BRANCH_SUPPLIER(BRANCH_ID INT AUTO_INCREMENT,SUPPLIER_NAME VARCHAR(20),SUPPLY_TYPE VARCHAR(20),PRIMARY KEY(BRANCH_ID,SUPPLIER_NAME),FOREIGN KEY(BRANCH_ID) REFERENCES BRANCH(BRANCH_ID) ON DELETE CASCADE);

INSERT INTO EMPLOYEE VALUES(100,"DAVID","WALLACE","1967-11-17","M",250000,NULL,NULL);
INSERT INTO BRANCH VALUES(1,"CORPORATE",100,"2006-02-09");
UPDATE EMPLOYEE 
SET BRANCH_ID=1
WHERE EMP_ID=100;
INSERT INTO EMPLOYEE VALUES(101,"JAN","LEVINSON","1961-05-11","F",110000,100,1);
INSERT INTO EMPLOYEE VALUES(102,"MICHAEL","SCOTT","1964-03-15","M",75000,100,NULL);
INSERT INTO BRANCH VALUES(2,"SCANTON",102,"1992-04-06");
UPDATE EMPLOYEE 
SET BRANCH_ID=2
WHERE EMP_ID=102;
INSERT INTO EMPLOYEE VALUES(103,"ANGELA","MARTIN","1971-06-25","F",63000,102,2);
INSERT INTO EMPLOYEE VALUES(104,"KELLY","KAPOOR","1980-02-05","F",55000,102,2);
INSERT INTO EMPLOYEE VALUES(105,"STANLEY","HUDSON","1958-02-19","M",69000,102,2);

INSERT INTO EMPLOYEE VALUES(106,"JOSH","PORTER","1969-09-05","M",78000,100,NULL);
INSERT INTO BRANCH VALUES(3,"STANFORD",106,"1998-02-13");
UPDATE EMPLOYEE 
SET BRANCH_ID=3
WHERE EMP_ID=106;
INSERT INTO EMPLOYEE VALUES(107,"ANDY","BERNARD","1973-07-2","M",65000,106,3);
INSERT INTO EMPLOYEE VALUES(108,"JIM","HALPERT","1980-10-01","M",71000,106,3);
INSERT INTO BRANCH_SUPPLIER VALUES(2,"HAMMER MILL","PAPER");
INSERT INTO BRANCH_SUPPLIER VALUES(2,"UNI-BALL","WRITING UTENSILS");
INSERT INTO BRANCH_SUPPLIER VALUES(3,"PATRIOT PAPER","PAPER");
INSERT INTO BRANCH_SUPPLIER VALUES(2,"JT FORMS & LABELS","CUSTOM FORMS");
INSERT INTO BRANCH_SUPPLIER VALUES(3,"UNI BALL","WRITING UTENSILS");
INSERT INTO BRANCH_SUPPLIER VALUES(3,"HAMMER MILL","PAPER");
INSERT INTO BRANCH_SUPPLIER VALUES(3,"STANDARD LABELS","CUSTOM FORMS");
INSERT INTO CLIENT VALUES(400,"DUNMORE HIGHSCHOOL",2);
INSERT INTO CLIENT VALUES(401,"LACKAWANA COUNTRY",2);
INSERT INTO CLIENT VALUES(402,"FEDEX",3);
INSERT INTO CLIENT VALUES(403,"JOHN DAILY LAW,LLC",3);
INSERT INTO CLIENT VALUES(404,"SCRANTON WHITEPAGES",2);
INSERT INTO CLIENT VALUES(405,"TIMES NEWSPAPER",3);
INSERT INTO CLIENT VALUES(406,"FEDEX",2);
INSERT INTO WORKS_WITH VALUES(105,400,55000);
INSERT INTO WORKS_WITH VALUES(102,401,267000);
INSERT INTO WORKS_WITH VALUES(108,402,22500);
INSERT INTO WORKS_WITH VALUES(107,403,5000);
INSERT INTO WORKS_WITH VALUES(108,403,12000);
INSERT INTO WORKS_WITH VALUES(105,404,33000);
INSERT INTO WORKS_WITH VALUES(107,405,26000);
INSERT INTO WORKS_WITH VALUES(102,406,15000);
INSERT INTO WORKS_WITH VALUES(105,406,130000);

--SELECT * FROM EMPLOYEE ORDER BY SEX,FIRST_NAME,LAST_NAME;

--SELECT * FROM employee LIMIT 5;
 
--SELECT FIRST_NAME AS FORENAME,LAST_NAME AS SURNAME FROM EMPLOYEE;

--SELECT DISTINCT SEX FROM EMPLOYEE;

--SELECT COUNT(EMP_ID) FROM EMPLOYEE;

--SELECT COUNT(EMP_ID) FROM EMPLOYEE WHERE SEX="F" AND BIRTH_DATE>="1971-01-01";

--SELECT AVG(SALARY) FROM EMPLOYEE WHERE SEX="F";

--SELECT COUNT(SEX),SEX FROM EMPLOYEE group by SEX;

--SELECT EMP_ID,SUM(TOTAL_SALES) FROM works_with group by EMP_ID;

--WILDCARDS  % any no.of characters,_ one character can be used multiple times;
--select * from BRANCH_SUPPLIER where SUPPLIER_NAME LIKE "%Labels";
--select * from employee where birth_date like "____-10%";
--select * from client where client_name like "%school%";

--union -should have same no. of columns and same datatypes 
--select first_name from employee union select branch_name from branch;
--select client_name,branch_id from client union select supplier_name,branch_id from branch_supplier;
--select sum(total_sales) from works_with union select sum(salary) from employee;
--UNION;
INSERT INTO BRANCH VALUES(4,"BUFFALO",NULL,NULL);
--JOINS;
--SELECT EMPLOYEE.EMP_ID,EMPLOYEE.FIRST_NAME,BRANCH.BRANCH_NAME FROM EMPLOYEE JOIN BRANCH ON BRANCH.MGR_ID=EMPLOYEE.EMP_ID;
--SELECT EMPLOYEE.EMP_ID,EMPLOYEE.FIRST_NAME,BRANCH.BRANCH_NAME FROM EMPLOYEE RIGHT JOIN BRANCH ON BRANCH.MGR_ID=EMPLOYEE.EMP_ID;
--SELECT EMPLOYEE.EMP_ID,EMPLOYEE.FIRST_NAME,EMPLOYEE.LAST_NAME 
--NESTED STATEMENTS;
--FROM EMPLOYEE
WHERE EMP_ID IN(
     SELECT works_with.EMP_ID 
     FROM works_with
     WHERE WORKS_WITH.TOTAL_SALES>30000);
--SELECT CLIENT.CLIENT_NAME FROM CLIENT WHERE CLIENT.BRANCH_ID IN(SELECT BRANCH.BRANCH_ID FROM BRANCH WHERE BRANCH.MGR_ID IN(SELECT EMPLOYEE.EMP_ID FROM EMPLOYEE WHERE FIRST_NAME="MICHAEL"));
--DELETING ENTRIES WHEN THERE IS A FOREIGN KEY ...ON DELETE SET NULL RETURNS A NULL VALUE TO FOREIGN KEY  AND ON DELETE CASCADE DELETES THE ROW CORRESPONDING TO FOREIGN KEY;
--DELETE FROM EMPLOYEE WHERE EMP_ID=102;
--SELECT * FROM BRANCH;
--DELETE FROM BRANCH WHERE BRANCH_ID=2;
--SELECT * FROM BRANCH_SUPPLIER;
--TRIGGERS  USE COMMAND LINE CLIENT TO ADD DELIMITER....CAN BE USED WHEN INSERTING,UPDATING,DELETING;
CREATE TABLE TRIGGER_TEST(MESSAGE VARCHAR(100));
INSERT INTO EMPLOYEE VALUES(109,"OSCAR","MARTINEZ","1968-02-19","M",69000,106,3);
SELECT * FROM TRIGGER_TEST;
DROP TRIGGER MY_TRIGGER;


--SECOND TRIGGER ADDED..USE COMMAND LINE CLIENT...NEW.FIRST_NAME ...NEW MEANS NEW ROW ....WILL RETURN FIRST NAME OF NEWLY ADDED ROW;
INSERT INTO EMPLOYEE VALUES(110,"KEVIN","MALONE","1978-02-19","M",69000,106,3);
DROP TRIGGER MY_TRIGGER1;
--THIRD TRIGGER;
INSERT INTO EMPLOYEE VALUES(111,"PAM","BEASLY","1988-02-19","F",69000,106,3);
SELECT * FROM TRIGGER_TEST;